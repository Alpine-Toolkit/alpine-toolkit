{# -*- mode: fundamental -*- #}

{#  ################################################################################################
 #
 # $ALPINE_TOOLKIT_BEGIN_LICENSE:GPL3$
 #
 # Copyright (C) 2017 Fabrice Salvaire
 # Contact: http://www.fabrice-salvaire.fr
 #
 # This file is part of the Alpine Toolkit software.
 #
 # This program is free software: you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
 # the Free Software Foundation, either version 3 of the License, or
 # (at your option) any later version.
 #
 # This program is distributed in the hope that it will be useful,
 # but WITHOUT ANY WARRANTY; without even the implied warranty of
 # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 # GNU General Public License for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 # $ALPINE_TOOLKIT_END_LICENSE$
 #
 ###############################################################################################  #}

{% macro data_streamer_decl(class_name, members) %}
QDataStream & operator<<(QDataStream & out, const {{class_name}} & obj);
QDataStream & operator>>(QDataStream & in, {{class_name}} & obj);
// qRegisterMetaTypeStreamOperators<{{class_name}}>("{{class_name}}");
{%- endmacro %}

{% macro data_streamer_impl(class_name, members, member_types) %}
QDataStream &
operator<<(QDataStream & out, const {{class_name}} & obj)
{
{% for member in members %}
  out << obj.{{member.name}}();
{% endfor %}

  return out;
}

QDataStream &
operator>>(QDataStream & in, {{class_name}} & obj)
{
{% for type in member_types %}
  {{type}} _{{type|replace(' ', '_')}};
{% endfor %}
{% for member in members %}
  in >> _{{member.type}};
  obj.set_{{member.name}}(_{{member.type}});
{% endfor %}

  return in;
}
{%- endmacro %}

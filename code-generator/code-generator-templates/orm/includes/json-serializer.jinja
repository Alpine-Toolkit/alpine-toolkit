{# -*- mode: fundamental -*- -#}

{#  ################################################################################################
 #
 # $ALPINE_TOOLKIT_BEGIN_LICENSE:GPL3$
 #
 # Copyright (C) 2017 Fabrice Salvaire
 # Contact: http://www.fabrice-salvaire.fr
 #
 # This file is part of the Alpine Toolkit software.
 #
 # This program is free software: you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
 # the Free Software Foundation, either version 3 of the License, or
 # (at your option) any later version.
 #
 # This program is distributed in the hope that it will be useful,
 # but WITHOUT ANY WARRANTY; without even the implied warranty of
 # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 # GNU General Public License for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 # $ALPINE_TOOLKIT_END_LICENSE$
 #
 ###############################################################################################  #}

{% macro field_to_json(field) -%}
{% if field.variable.to_json -%}
m_{{field.name}}.{{field.variable.to_json}}()
{% elif field.variable.cast_to_json -%}
{{field.variable.cast_to_json}}(m_{{field.name}})
{%- else -%}
QJsonValue(m_{{field.name}})
{%- endif %}
{%- endmacro %}

{% macro insert(field) -%}
{# json_object[] = -#}
json_object.insert(QLatin1String("{{field.json_name}}"), {{ field_to_json(field) }});
{%- endmacro %}

{# ############################################################################################## #}

{% macro to_json(class_name, schema) -%}
QJsonObject
{{class_name}}::to_json(bool only_changed) const
{
  QJsonObject json_object;

 if (only_changed) {
{% for field in schema.json_fields %}
    if (is_{{field.name}}_modified())
      {{ insert(field) }}
{% endfor %}
  } else {
{% for field in schema.json_fields %}
    {{ insert(field) }}
{% endfor %}
  }

  return json_object;
}
{%- endmacro %}

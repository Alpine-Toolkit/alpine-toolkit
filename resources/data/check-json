#! /usr/bin/env python3

###################################################################################################
#
# $ALPINE_TOOLKIT_BEGIN_LICENSE:GPL3$
#
# Copyright (C) 2017 Fabrice Salvaire
# Contact: http://www.fabrice-salvaire.fr
#
# This file is part of the Alpine Toolkit software.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# $ALPINE_TOOLKIT_END_LICENSE$
#
####################################################################################################

####################################################################################################

import json
import argparse

####################################################################################################

parser = argparse.ArgumentParser(description='Check JSON file.')
parser.add_argument('json_paths', metavar='FILE.json',
                    nargs='+',
                    help='JSON files to check')

args = parser.parse_args()

####################################################################################################

for path in args.json_paths:
    with open(path) as f:
        json_data = f.read()
    try:
        data = json.loads(json_data)
        print("\n{} is valid".format(path))
    except json.decoder.JSONDecodeError as e:
        print("\n{} is not valid".format(path))
        # line = json_data.split('\n')[line_number]
        # print(line)
        print(e)

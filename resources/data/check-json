#! /usr/bin/env python3

###################################################################################################
#
# This file is part of the Alpine Toolkit software.
# Copyright (C) 2017 Fabrice Salvaire
# Contact: http://www.fabrice-salvaire.fr
# SPDX-License-Identifier: GPL-3.0-only
#
####################################################################################################

####################################################################################################

import json
import argparse

####################################################################################################

parser = argparse.ArgumentParser(description='Check JSON file.')
parser.add_argument('json_paths', metavar='FILE.json',
                    nargs='+',
                    help='JSON files to check')

args = parser.parse_args()

####################################################################################################

for path in args.json_paths:
    with open(path) as f:
        json_data = f.read()
    try:
        data = json.loads(json_data)
        print("\n{} is valid".format(path))
    except json.decoder.JSONDecodeError as e:
        print("\n{} is not valid".format(path))
        # line = json_data.split('\n')[line_number]
        # print(line)
        print(e)

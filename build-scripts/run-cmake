#! /bin/bash

####################################################################################################
#
# Build Apline Toolkit on X86
#
####################################################################################################

####################################################################################################
#
# Set source / build path
#

source_path=`realpath $0`
source_path=`dirname ${source_path}`
source_path=`dirname ${source_path}`
build_path=${source_path}/build-cmake

####################################################################################################
#
# Set GCC envs
#

export LC_ALL="C"

export CFLAGS="-g -O0"
export CXXFLAGS="${CFLAGS}"
BUILD_TYPE=DEBUG

# https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html
# export CFLAGS="-O3 -march=broadwell -mtune=broadwell -flto"
# export CXXFLAGS="${CFLAGS}"
# BUILD_TYPE=RELEASE

####################################################################################################
#
# Qt
#

source ${source_path}/build-scripts/tools/path.sh

QT_VERSION=6.3.0

append_to_path_if_not /opt/Qt/${QT_VERSION}/gcc_64/bin/
append_to_ld_library_path_if_not /opt/Qt/${QT_VERSION}/gcc_64/lib/

export CMAKE_PREFIX_PATH=/srv/qt/Qt/${QT_VERSION}/gcc_64/lib/cmake/

####################################################################################################
#
# Make build directory
#

if ! [ -e ${build_path} ]; then
  mkdir ${build_path}
fi
pushd ${build_path}

####################################################################################################
#
# Clean
#

rm -f CMakeCache.txt
rm -f compile_commands.json
if [ -e Makefile ]; then
  make clean
fi

####################################################################################################
#
# Make
#

# /etc/security/limits.d/00-user.conf
# -DSANITIZE=ON

# https://sarcasm.github.io/notes/dev/compilation-database.html#cmake
#   -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
#     This will create a file name compile_commands.json in the build directory.

cmake \
  -GNinja \
  -D CMAKE_BUILD_TYPE:STRING=={BUILD_TYPE} \
  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
  -DSANITIZE=OFF \
  -DINSTRUMENT_FUNTIONS=OFF \
  ${source_path}

ninja
# ninja -C build-cmake -j 4

# make -k
# make -j4

####################################################################################################

# if [ -e run-asan ]; then
#   ln -sf ../build-scripts/run-asan.sh
# fi

# source run-asan.sh
